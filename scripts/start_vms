#!/bin/bash
if [ "$(whoami)" != "root" ]; then
  echo "sorry, need to be root"
  exit -1
fi
if [ $# != 1 ]; then
  echo "usage: $0 Number of VMs to start"
  exit -2
fi
# qemu base image
vmbaseimg="/opt/qemu-imgs/fedora21-2.qcow"
# qemu diff image path
diffimg="/opt/qemu-imgs"
# path to qemu
qemu="qemu-system-x86_64"
# qemu args
qemu_args="-localtime -enable-kvm -nographic"
# assigned VM RAM
qemu_vm_ram="2048"
# path to open v switch port init scripts
ifupscript="ovs-ifup"
ifdownscript="ovs-ifdown"
# prefix for mac adresses
macaddrprefix="52:54:FF:FF:FF:"
# begin value for last block of mac adress
macaddrbegin="00"
# time to wait till all vms finished boot
sleeptime=60

# start master vm
if [ -f "${diffimg}/vm_master.qcow" ]; then
  echo "${diffimg}/vm_master.qcow already exsist"
else
  qemu-img create -f qcow -b $vmbaseimg "${diffimg}/vm_master.qcow"
fi
cmd="${qemu} -hda "${diffimg}/vm_master.qcow" -boot d -m ${qemu_vm_ram} ${qemu_args} \
    -net nic,macaddr=${macaddrprefix}${i}                                         \
    -net tap,script=${ifupscript},downscript=${ifdownscript}"
exec ${cmd} & echo $! >> "masterpid.txt"
# wait till master img has finished boot
sleep $sleeptime

masterip=$(cat /var/lib/misc/dnsmasq.leases | awk '{print $3}')
echo $masterip >> "masterip.txt"

for i in $(seq 1 1 $1); do
  if [ -f "${diffimg}/vm${i}.qcow" ]; then
    echo "${diffimg}/vm${i}.qcow already exsist"
  else
    qemu-img create -f qcow -b $vmbaseimg "${diffimg}/vm${i}.qcow"
  fi
  cmd="${qemu} -hda "${diffimg}/vm${i}.qcow" -boot d -m ${qemu_vm_ram} ${qemu_args}        \
       -net nic,macaddr=${macaddrprefix}${i}                                   \
       -net tap,script=${ifupscript},downscript=${ifdownscript}"
  exec ${cmd} & echo $! >> "pids.txt"
done

sleep $sleeptime

ips=$(cat /var/lib/misc/dnsmasq.leases | awk '{print $3}')
for i in $ips
do
  echo $i >> "hostfile.txt"
done

echo "All VMs started"

# connect to all vms to force load mpi module
for i in $(cat hostfile.txt)
do
  ssh triebe@$i 'exit'
done

# start benchmark script on master vm
ssh triebe@$masterip './gitrepos/fractal-benchmark/scripts/run_benches'
